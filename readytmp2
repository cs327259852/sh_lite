#!/bin/bash

while [[ $# -ge 1 ]]; do
    case $1 in
        -s|--source )
            dir=$2
	    if [ "$2" == "" ];then
	    	echo "source dir cant be empty!"
		exit 8
	    fi		
            shift 2
            ;;
        * )
            echo "usage: $0 -s sourcedir"
	    exit 8 
            shift   
            ;;
    esac
done




if [ ! -d ${source} ]
	then echo "${dir}目录不存在"
	exit 8	
fi

declare -A dbConfMap
confFile=/home/peter/dev_project/sh_lite/db.conf
tableFile=/home/peter/go/src/study/etl_validate/tmpconpare/tables.txt
# 设置IFS,将分隔符设置为换行符
OLDIFS=$IFS
IFS=$'\n'
# 读取文件中的内容到数组中
confArr=($(cat $confFile))
tables=($(cat $tableFile))

# 恢复之前的设置
IFS=$OLDIFS
for i in "${!confArr[@]}";
do
{
	val=${confArr[$i]}
	kvpairArr=(${val//=/ })
	dbConfMap["${kvpairArr[0]}"]="${kvpairArr[1]}"
}
done

#中间数据库配置
miduser2=${dbConfMap["miduser2"]}
midhost2=${dbConfMap["midhost2"]}
midpwd2=${dbConfMap["midpwd2"]}
middb2=${dbConfMap["middb2"]}

#b2b业务库配置
b2bbizhost=${dbConfMap["b2bbizhost"]}
b2bbizuser=${dbConfMap["b2bbizuser"]}
b2bbizpwd=${dbConfMap["b2bbizpwd"]}
b2bbizdb=${dbConfMap["b2bbizdb"]}

#ERP集中库配置
erpcenterhost=${dbConfMap["erpcenterhost"]}
erpcenterport=${dbConfMap["erpcenterport"]}
erpcenteruser=${dbConfMap["erpcenteruser"]}
erpcenterpwd=${dbConfMap["erpcenterpwd"]}
erpcenterservice=${dbConfMap["erpcenterservice"]}

#validate库配置
validhost=${dbConfMap["validhost"]}
validuser=${dbConfMap["validuser"]}
validpwd=${dbConfMap["validpwd"]}
validdb=${dbConfMap["validdb"]}




mid_="mid_"
valid_="valid_"
erp_="erp_"
b2b5_="b2b5_"

cd ${dir}
mkdir second
starttime=$(date +%s)


function getArrItemIdx(){
local arr=$1
local item=$2
local index=0
for i in ${arr[*]}
do
	  if [[ "$i" == "$item" ]]
	    then
	    return $index
	  fi
	  index=$(( $index + 1 ))
done
return -1
}
for file in *; do
	array=(${file//#/ })
    	if [ ${#array[*]} -eq 3 ];then
		morv="${array[0]}"
		tablename="${array[1]}"
		typename="${array[2]}"
		typename=(${typename//./ })
		typename="${typename[0]}"
		getArrItemIdx "${tables[*]}" ${tablename}
		idx=$?
		if [ $idx -eq -1 ];then
			continue			
		fi
		if [ "${morv}" == "ERP库到中间库" ];then
			defaultvalue="'-1'"
			pks=`awk 'BEGIN{}{print $1",";}' ${file}`
			
			echo "$file->$pks"
			pkArr=(${pks//,/ })
			
			if [ ${#pkArr[*]} -lt 10000 ] && [ ${#pkArr[*]} -gt 0 ];then
				pk0="${defaultvalue}"
				let totalNum=0
				totalLen=${#pkArr[*]}
				for i in "${!pkArr[@]}";   
				do   
					pk="'${pkArr[$i]}'" 
					if [ "${pk}" = "'pk'" ];then
						continue
					fi 
					pk0="${pk0},${pk}"
					b=$(( $i % 100 ))
					if [ $b == 0 ] && [ $i != 0 ] ; then
						field="pk,lastmodifytime"
						where="where pk in (${pk0})"
						mysqlSelectSql="select ${field} from ${tablename} ${where};"
						{
						mysql -h${midhost2} -u${miduser2} -p${midpwd2} ${middb2} -e"${mysqlSelectSql}" >> second/${mid_}${tablename}_$typename$i.mid
						} &
						field="pk||','|| to_char(lastmodifytime,'yyyy-mm-dd hh24:mi:ss')"
						#warning:must be ends of ';',otherwise no results back, f**k oracle!!!!!!!
						oracleSelectSql="select ${field} from ${tablename} ${where};"
						#erp database
						#
						{
						sqlplus ${erpcenteruser}/${erpcenterpwd}@${erpcenterhost}:${erpcenterport}/${erpcenterservice} <<!
							set linesize 2000
							set colsep ''
							set heading off
							set feedback off
							set pagesize 0
							set verify off
							set newp none
							set echo off
							spool $(pwd)/second/${erp_}${tablename}_$typename$i
							${oracleSelectSql}
							spool off
!
						}> /dev/null  &
						pk0="${defaultvalue}"
					fi
				done
				if [ "$pk0" != "$defaultvalue" ] ; then
						field="pk,lastmodifytime"
						where="where pk in (${pk0})"
						mysqlSelectSql="select ${field} from ${tablename} ${where};"
						{
						mysql -h${midhost2} -u${miduser2} -p${midpwd2} ${middb2} -e"${mysqlSelectSql}" >> second/${mid_}${tablename}_${typename}last.mid
						} &
						field="pk||','|| to_char(lastmodifytime,'yyyy-mm-dd hh24:mi:ss')"
						#warning:must be ends of ';',otherwise no results back, f**k oracle!!!!!!!
						oracleSelectSql="select ${field} from ${tablename} ${where};"
						#erp database
						#
						echo ${oracleSelectSql}
{
						sqlplus ${erpcenteruser}/${erpcenterpwd}@${erpcenterhost}:${erpcenterport}/${erpcenterservice} <<!
							set linesize 2000
							set colsep ''
							set heading off
							set feedback off
							set pagesize 0
							set verify off
							set newp none
							set echo off
							spool $(pwd)/second/${erp_}${tablename}_${typename}last 
							${oracleSelectSql}
							spool off
!
						}> /dev/null &
						pk0="${defaultvalue}"
					fi 
				
			fi
		fi

		
		
		

		
		
	fi
done
wait

for i in "${!tables[@]}";   
do
{
	tablename=${tables[$i]}
	ls second/${mid_}${tablename}_*.mid 2>/dev/null && cat second/${mid_}${tablename}_*.mid >> second/${mid_}${tablename}.mid && sed -i -e "1d" second/${mid_}${tablename}.mid && sed -i "/pk,/d" second/${mid_}${tablename}.mid  && awk -F '\t' '{a="";for(i=1;i<=NF;i++){if(a==""){a=$i;}else{a=a","$i;} }print a;}' second/${mid_}${tablename}.mid | sed "s/NULL//g" > second/${mid_}${tablename} && sed -i -e "/pk/d" second/${mid_}${tablename}  && rm second/${mid_}${tablename}_*.mid && rm second/${mid_}${tablename}.mid
	ls second/${erp_}${tablename}_*.lst 2>/dev/null && cat second/${erp_}${tablename}_*.lst >> second/${erp_}${tablename}.lst && rm second/${erp_}${tablename}_*.lst && mv second/${erp_}${tablename}.lst second/${erp_}${tablename} && sed -i -e "/SQL>/d" -e"1d" -e"\$d" second/${erp_}${tablename} 
}
done
wait
echo "数据整理完毕!"
